ACSMX是一种快速查找关键字的算法。
它是基于一种状态机。

用于在文章中找到多个关键字。

它支持多个关键字，可以遍历一次文章，就可以找到所有的关键字，可以多次匹配重复的关键字。
由于它是基于状态机，所以用户添加完所有的关键字后，需要进行一种编译，把状态机组建出来。
它不支持动态增加或是删除关键字。

https://blog.csdn.net/cy_cai/article/details/53079465

V0是原始代码。

V1是acsmx可以编译通过的代码。

V2:
	增加__CASE__，不再支持“大小写敏感”。
V3：
   使用打印和日志的方式来说明一些具体参数的用法。
   

V4:


V5：
AC算法在目录访问中的使用。

在强访过程中，把需要保护的目录发关键字的方式加入到AC里。
当用户访问此目录，或是此目录里的子文件，都会被AC算法匹配到。


如把/home/abc是关键字，则用户访问 /home/abc/124/时，可以通过AC算法发现用户正在访问/home/abc/，这样就可以取出/home/abc的权限。


但是使用AC也有一些问题：
多次匹配的问题：
1.1AC可以是多次匹配重复的关键字。如关键字/usr.当用户访问/home/usr/ /bin/usr时都会被匹配到。 但在强访需求中是不需要的。
1.2 多次匹配其实浪费了内存也浪费了时间。

2.入参字符串的首字符匹配。
/usr/ 的关键字，被/bin/usr/匹配到，其实/bin/usr/这个目录与/usr/目录不一样，如果从入参的首字符匹配，这样就没存在这个问题了。


3.匹配父目录的需求。
如目录/home/abc/123/xyz作为了关键字，那当用户rename它的父目录(/home/abc/123)时，是需要被禁止的。也就是说如何从AC算法里的关键字们找到关键字的子部分。